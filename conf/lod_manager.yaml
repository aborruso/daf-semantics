swagger: "2.0"
info: 
  version: "1.0.0"
  title: "LOD Manager test"
  description: "LOD Manager: testing OpenAPI"
  termsOfService: "http://swagger.io/terms/"
  contact: 
    name: "swagger"
    email: "apiteam@swagger.io"
  license: 
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost:9000
basePath: /kb/v1
schemes: 
  - "http"
consumes: 
  - "application/json"
produces: 
  - "application/json"
paths: 

  "/triples": 
    get: 
      summary: "number of triples"
      description: "number of triples"
      operationId: "countTriples"
      produces: 
        - "application/json"
      
      responses: 
        200:
          description: "triples"
          examples: { "triples": 0 }
          schema:
            $ref: "#/definitions/TriplesCount"

  "/ontology/{slug}": 
    get: 
      summary: "gets an ontology"
      description: "gets an ontology"
      operationId: "getOntology"
      produces: 
        - "text/turtle"
        - "application/rdf+xml"
      parameters:
        - in: path
          name: slug
          description: the id for the new ontology
          required: true
          type: string
          #default: "foaf"
          
      responses: 
        200:
          description: "status of operation"
          # examples: { "message": "ontology retrieved" }
          schema:
            type: string
          
      tags: [ ontologies ] 
      
  # TODO "/ontology/{slug}/triples": 

  
  # NOTE: this endpoint can be used as a small reference
  "/time/now": 
    get: 
      summary: "returns the current time"
      description: "returns the current time"
      operationId: "getCurrentTime"
      produces: 
        - "application/json"
      responses: 
        200:
          description: "the current time"
          examples: { "id": 3333, "time": "2017-06-28 11:12:00" }
          schema: 
            $ref: "#/definitions/Time"
      tags: [ test ] 

definitions: 

  Time: 
    type: "object"
    required: 
      - "id"
      - "time"
    properties: 
      id: 
        type: "integer"
        format: "int64"
      time: 
        type: "string"

  TriplesCount: 
    type: "object"
    required: 
      - "id"
      - "triples"
    properties: 
      id: 
        type: "string"
      triples: 
        type: "integer"

