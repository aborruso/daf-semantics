swagger: "2.0"
info: 
  version: "1.0.0"
  title: "LOD Manager test"
  description: "LOD Manager: testing OpenAPI"
  termsOfService: "http://swagger.io/terms/"
  contact: 
    name: "swagger"
    email: "apiteam@swagger.io"
  license: 
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost:9000
basePath: /kb/v1
schemes: 
  - "http"
consumes: 
  - "application/json"
produces: 
  - "application/json"
paths: 

  # currently supports only turtle serialization!
  "/ontology/{prefix}": 
    get: 
      summary: "gets an ontology"
      description: "gets an ontology"
      operationId: "getOntology"
      produces: [ "text/plain" ]
      parameters:
        - in: path
          name: prefix
          description: the prefix for the given ontology
          required: true
          type: string
          #default: "foaf"
      responses: 
        200:
          description: "status of operation"
          schema:
            type: string
      tags: [ ontologies ] 
  

  # currently supports only turtle serialization!
  "/sparql": 
    get: 
      summary: "redirect to sparql endpoint"
      description: "redirect to sparql endpoint"
      operationId: "sparql"
      produces: 
        - "text/turtle"
      responses: 
        200:
          description: "prefixes"
          schema:
            type: array
            items:
              $ref: "#/definitions/Prefix"
      tags: [ ontologies ]


  "/prefixes": 
    get: 
      summary: "a list of used prefixes"
      description: "a list of used prefixes"
      operationId: "prefixesList"
      produces: 
        - "application/json"
      responses: 
        200:
          description: "prefixes"
          schema:
            type: array
            items:
              $ref: "#/definitions/Prefix"
      tags: [ catalog ]

  "/prefixes/lookup/{prefix}": 
    get: 
      summary: "direct prefix lookup"
      description: "this endpoint return the namespace currently associated with the given prefix"
      operationId: "prefixDirectLookup"
      produces: 
        - "application/json"
      parameters:
        - in: path
          name: prefix
          description: the defaul prefix associated with a specific ontology
          required: true
          type: string
      responses: 
        200:
          description: "prefix/namespace"
          examples: { "prefix": "foaf", "namespace": "http://xmlns.com/foaf/spec/index.rdf" }
          schema:
            $ref: "#/definitions/Prefix"
      tags: [ catalog ]
      
  "/prefixes/reverse/{namespace}": 
    get: 
      summary: "inverse prefix lookup"
      description: "this endpoint return the prefix currently associated with the given namespace"
      operationId: "prefixReverseLookup"
      produces: 
        - "application/json"
      parameters:
        - in: path
          name: namespace
          description: the defaul prefix associated with a specific ontology
          required: true
          type: string
      responses: 
        200:
          description: "namespace/prefix"
          examples: { "prefix": "foaf", "namespace": "http://xmlns.com/foaf/spec/index.rdf" }
          schema:
            $ref: "#/definitions/Prefix"
      tags: [ catalog ]


  "/triples": 
    get: 
      summary: "number of triples"
      description: "number of triples"
      operationId: "countTriples"
      produces: 
        - "application/json"
      responses: 
        200:
          description: "triples"
          examples: { "triples": 0 }
          schema:
            $ref: "#/definitions/TriplesCount"
      tags: [ stats ]
      
  "/triples/{prefix}": 
    get: 
      summary: "number of triples"
      description: "number of triples"
      operationId: "countTriplesByOntology"
      produces: 
        - "application/json"
      parameters:
        - in: path
          name: prefix
          description: the prefix used for an ontology 
          required: true
          type: string
          
      responses: 
        200:
          description: "triples"
          examples: { "triples": 0 }
          schema:
            $ref: "#/definitions/TriplesCount"
      tags: [ stats ]

definitions: 

  Prefix: 
    type: "object"
    required: 
      - "prefix"
      - "namespace"
    properties: 
      prefix: 
        type: "string"
      namespace: 
        type: "string"
        
  TriplesCount: 
    type: "object"
    required: 
      - "id"
      - "triples"
    properties: 
      id: 
        type: "string"
      triples: 
        type: "integer"

